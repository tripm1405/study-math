<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

<div class="w-full">
    <div style="display: flex; justify-content: space-between;">
        <h1>Quản lí đáp án</h1>
        <button class="k-btn-create btn" onClick="upsert('<%= data?.newId %>')">Tạo đáp án</button>
    </div>
    <div>
        <table class="k-table k-table-pointer table table-striped table-bordered my-2">
            <thead>
            <tr>
                <th style="width: 80px;">STT</th>
                <th>Mã</th>
                <th>Tên</th>
                <th>Điểm</th>
                <th style="width: 50px;"></th>
            </tr>
            </thead>
            <tbody>
            <% for (const answer of data?.answers?.models || []) { %>
                <tr onClick="upsert('<%= answer?._id %>')">
                    <td style="text-align: right;"><%= answer?.index %></td>
                    <td><%= answer?.code %></td>
                    <td><%= answer?.name %></td>
                    <td style="text-align: right;"><%= answer?.score %></td>
                    <td>
                        <div class="w-full h-full d-flex gap-1">
                            <button class="btn btn-danger btn-sm" onClick="del('<%= answer?._id %>')"><i class="fas fa-trash-alt"></i></button>
                        </div>
                    </td>
                </tr>
            <% } %>
            </tbody>
        </table>
        <div>
            <%- include(partialPath + '/pagination.partial.ejs', { ...(data?.answers || {}), model: 'answers', }) %>
        </div>
    </div>
</div>

<input name="questionId" type="hidden" value="<%= data?.questionId %>" />

<script>
    function upsert(id) {
        const questionId = document.querySelector('input[name="questionId"]')?.value;
        window.location.href = `/questions/${questionId}/answers/${id}`;
    }

    async function del(id) {
        const questionId = document.querySelector('input[name="questionId"]')?.value;
        try {
            await axios.delete(`/api/questions/${questionId}/answers/${id}`);
            location.reload();
        } catch (error) {
            handleDeleteError();
        }
    }

    function handleDeleteError() {
        Toastify({
            text: 'Không thể xóa đáp án. Vui lòng thử lại sau.',
            duration: 3000,
            gravity: 'top',
            position: 'right',
            backgroundColor: '#ff6347',
        }).showToast();
    }
</script>