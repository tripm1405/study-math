<style>
  .btn:hover {
      background-color:aquamarine;
      box-shadow: 0 5px 15px rgba(0,0,0,0.3);
  }
</style>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

<h1>Quản lí khối</h1>

<button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#import-modal">IMPORT</button>
<button class="btn btn-primary" onClick="onExport()">EXPORT</button>

<table class="table table-striped mt-3">
    <thead>
    <tr>
        <th>STT</th>
        <th>Mã</th>
        <th>Người tạo</th>
        <th>Ngày tạo</th>
        <th style="width: 100px;"></th>
    </tr>
    </thead>
    <tbody>
    <% let index = 1; %>
    <% for (const block of (data?.blocks || [])) { %>
        <tr>
            <th scope="row"><%= index++ %></th>
            <td><%= block?.name %></td>
            <td><%= block?.createdById %></td>
            <td><%= block.createdAt.getFullYear() + '-' + String(block.createdAt.getMonth() + 1).padStart(2, '0') + '-' + String(block.createdAt.getDate()).padStart(2, '0') + ' ' + String(block.createdAt.getHours()).padStart(2, '0') + ':' + String(block.createdAt.getMinutes()).padStart(2, '0') %></td>
            <td class="align-middle">
                <button class="btn btn-secondary btn-sm me-1" onClick="upsert('<%= block?._id %>')"><i class="fas fa-edit"></i></button>
                <button class="btn btn-danger btn-sm" onClick="del('<%= block?._id %>')"><i class="fas fa-trash-alt"></i></button>
            </td>
        </tr>
    <% } %>
    </tbody>
</table>

<div class="modal fade" id="import-modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
<div class="modal-dialog">
  <div class="modal-content">
    <form onsubmit="onImport(event)">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Import khối</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
        </button>
      </div>
      <div class="modal-body">
          <div>
              <label for="block">Chọn khối</label>
              <input id="block" name="block" type="file" />
          </div>
          <div>
              <label for="images">Chọn hình</label>
              <input id="images" name="images" type="file" multiple />
          </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
        <button type="submit" class="btn btn-primary">Đồng ý</button>
      </div>
    </form>
  </div>
</div>
</div>

<script>
function upsert(id) {
  window.location.href = `/blocks/${id}`;
}

async function del(id) {
  try {
    await axios.delete(`/blocks/${id}`);
    Toastify({
      text: 'Xóa khối thành công!',
      duration: 3000,
      gravity: 'top',
      position: 'right',
      backgroundColor: '#4CAF50',
    }).showToast();
    location.reload();
  } catch (error) {
    console.error('Delete Error:', error);
    Toastify({
      text: 'Đã xảy ra lỗi khi xóa khối. Vui lòng thử lại sau.',
      duration: 3000,
      gravity: 'top',
      position: 'right',
      backgroundColor: '#ff6347',
    }).showToast();
  }
}

async function onImport(event) {
  event.preventDefault();

  const formData = new FormData(event.target);
  try {
    const res = await axios.post('/api/blocks/import', formData);

    if (!res?.data?.success) {
      Toastify({
        text: 'Import khối không thành công. Vui lòng thử lại.',
        duration: 3000,
        gravity: 'top',
        position: 'right',
        backgroundColor: '#ff6347',
      }).showToast();
      return;
    }

    Toastify({
      text: 'Import khối thành công!',
      duration: 3000,
      gravity: 'top',
      position: 'right',
      backgroundColor: '#4CAF50',
    }).showToast();

    window.location.reload();
  } catch (error) {
    console.error('Import Error:', error);
    Toastify({
      text: 'Đã xảy ra lỗi khi import khối. Vui lòng thử lại sau.',
      duration: 3000,
      gravity: 'top',
      position: 'right',
      backgroundColor: '#ff6347',
    }).showToast();
  }
}

  async function onExport() {
    const fileRes = await axios.get(`/api/blocks/export`, {
      params: {
        questionId: null,
      }
    });
    await K.exportJson({
      res: fileRes,
    });
  }
</script>